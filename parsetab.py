
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD BOOLEAN COMA COMILLADOBLE COMILLASIMPLE DEF DO DOBLEIGUAL DOSPUNT ELSE ENUM FALSE FINAL FOR GET ID IF IGUAL IN INTEGER IS LCORCH LIST LLLAVE LPAREN MAS MASIGUAL MAYOR MENOR MULTI MUTABLE_LIST MUTABLE_LIST_OF MUTABLE_SET NULL NUMERO OBJECT PACKAGE PRINTLN PUNTO RCORCH READ_LINE RETURN RLLAVE RPAREN SUPER THIS THROW TRUE TRY VAL VAR WHILEalgoritmo : declaracion\n                   | comparacion\n                    | imprimir\n                    | agregarElemento\n                    | obtenerElemento\n                    | crearLista\n    declaracion :  declaracion_conTipo\n                    |\n    declaracion_conTipo : tipoVariable ID DOSPUNT tipoDato asignacion tipoVariable : VAR\n                    | VAL\n    tipoDato :  INTEGER\n                   | BOOLEAN\n       booleano :  TRUE\n                | FALSE\n            asignacion : asignacion_simple\n                    |\n    asignacion_simple : IGUAL valor valor :    NUMERO\n                | ID\n                | booleano\n    comparacion : comparacion_igual\n                    | comparacion_mayor\n                    |\n    comparacion_igual :  DOBLEIGUAL comparacion_mayor :  MAYOR imprimir : PRINTLN LPAREN valor RPARENcrearLista : VAL ID DOSPUNT MUTABLE_LIST MENOR tipoDato MAYOR IGUAL MUTABLE_LIST_OF LPAREN valor RPARENagregarElemento : ID PUNTO ADD LPAREN valor RPARENobtenerElemento : ID PUNTO GET LPAREN NUMERO RPAREN'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,14,16,23,24,25,26,27,32,36,37,38,42,43,45,46,48,54,],[-8,0,-1,-2,-3,-4,-5,-6,-7,-22,-23,-26,-25,-19,-20,-21,-14,-15,-27,-17,-12,-13,-9,-16,-29,-30,-18,-28,]),'PRINTLN':([0,],[11,]),'ID':([0,13,15,17,18,33,44,52,],[12,20,21,-10,24,24,24,24,]),'VAL':([0,],[13,]),'DOBLEIGUAL':([0,],[16,]),'MAYOR':([0,37,38,47,],[14,-12,-13,49,]),'VAR':([0,],[17,]),'LPAREN':([11,28,29,51,],[18,33,34,52,]),'PUNTO':([12,],[19,]),'NUMERO':([18,33,34,44,52,],[23,23,40,23,23,]),'TRUE':([18,33,44,52,],[26,26,26,26,]),'FALSE':([18,33,44,52,],[27,27,27,27,]),'ADD':([19,],[28,]),'GET':([19,],[29,]),'DOSPUNT':([20,21,],[30,31,]),'RPAREN':([22,23,24,25,26,27,39,40,53,],[32,-19,-20,-21,-14,-15,45,46,54,]),'MUTABLE_LIST':([30,],[35,]),'INTEGER':([31,41,],[37,37,]),'BOOLEAN':([31,41,],[38,38,]),'MENOR':([35,],[41,]),'IGUAL':([36,37,38,49,],[44,-12,-13,50,]),'MUTABLE_LIST_OF':([50,],[51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'algoritmo':([0,],[1,]),'declaracion':([0,],[2,]),'comparacion':([0,],[3,]),'imprimir':([0,],[4,]),'agregarElemento':([0,],[5,]),'obtenerElemento':([0,],[6,]),'crearLista':([0,],[7,]),'declaracion_conTipo':([0,],[8,]),'comparacion_igual':([0,],[9,]),'comparacion_mayor':([0,],[10,]),'tipoVariable':([0,],[15,]),'valor':([18,33,44,52,],[22,39,48,53,]),'booleano':([18,33,44,52,],[25,25,25,25,]),'tipoDato':([31,41,],[36,47,]),'asignacion':([36,],[42,]),'asignacion_simple':([36,],[43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> algoritmo","S'",1,None,None,None),
  ('algoritmo -> declaracion','algoritmo',1,'p_algoritmo','analizador_sintactico.py',7),
  ('algoritmo -> comparacion','algoritmo',1,'p_algoritmo','analizador_sintactico.py',8),
  ('algoritmo -> imprimir','algoritmo',1,'p_algoritmo','analizador_sintactico.py',9),
  ('algoritmo -> agregarElemento','algoritmo',1,'p_algoritmo','analizador_sintactico.py',10),
  ('algoritmo -> obtenerElemento','algoritmo',1,'p_algoritmo','analizador_sintactico.py',11),
  ('algoritmo -> crearLista','algoritmo',1,'p_algoritmo','analizador_sintactico.py',12),
  ('declaracion -> declaracion_conTipo','declaracion',1,'p_declaracion','analizador_sintactico.py',16),
  ('declaracion -> <empty>','declaracion',0,'p_declaracion','analizador_sintactico.py',17),
  ('declaracion_conTipo -> tipoVariable ID DOSPUNT tipoDato asignacion','declaracion_conTipo',5,'p_declaracion_conTipo','analizador_sintactico.py',20),
  ('tipoVariable -> VAR','tipoVariable',1,'p_tipoVariable','analizador_sintactico.py',23),
  ('tipoVariable -> VAL','tipoVariable',1,'p_tipoVariable','analizador_sintactico.py',24),
  ('tipoDato -> INTEGER','tipoDato',1,'p_tipoDato','analizador_sintactico.py',28),
  ('tipoDato -> BOOLEAN','tipoDato',1,'p_tipoDato','analizador_sintactico.py',29),
  ('booleano -> TRUE','booleano',1,'p_booleano','analizador_sintactico.py',33),
  ('booleano -> FALSE','booleano',1,'p_booleano','analizador_sintactico.py',34),
  ('asignacion -> asignacion_simple','asignacion',1,'p_asignacion','analizador_sintactico.py',39),
  ('asignacion -> <empty>','asignacion',0,'p_asignacion','analizador_sintactico.py',40),
  ('asignacion_simple -> IGUAL valor','asignacion_simple',2,'p_asignacion_simple','analizador_sintactico.py',43),
  ('valor -> NUMERO','valor',1,'p_valor','analizador_sintactico.py',46),
  ('valor -> ID','valor',1,'p_valor','analizador_sintactico.py',47),
  ('valor -> booleano','valor',1,'p_valor','analizador_sintactico.py',48),
  ('comparacion -> comparacion_igual','comparacion',1,'p_comparacion','analizador_sintactico.py',52),
  ('comparacion -> comparacion_mayor','comparacion',1,'p_comparacion','analizador_sintactico.py',53),
  ('comparacion -> <empty>','comparacion',0,'p_comparacion','analizador_sintactico.py',54),
  ('comparacion_igual -> DOBLEIGUAL','comparacion_igual',1,'p_comparacion_igual','analizador_sintactico.py',58),
  ('comparacion_mayor -> MAYOR','comparacion_mayor',1,'p_comparacion_mayor','analizador_sintactico.py',61),
  ('imprimir -> PRINTLN LPAREN valor RPAREN','imprimir',4,'p_imprimir','analizador_sintactico.py',65),
  ('crearLista -> VAL ID DOSPUNT MUTABLE_LIST MENOR tipoDato MAYOR IGUAL MUTABLE_LIST_OF LPAREN valor RPAREN','crearLista',12,'p_crearLista','analizador_sintactico.py',68),
  ('agregarElemento -> ID PUNTO ADD LPAREN valor RPAREN','agregarElemento',6,'p_agregarElemento','analizador_sintactico.py',73),
  ('obtenerElemento -> ID PUNTO GET LPAREN NUMERO RPAREN','obtenerElemento',6,'p_obtenerElemento','analizador_sintactico.py',76),
]
